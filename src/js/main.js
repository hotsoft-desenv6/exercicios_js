// Generated by CoffeeScript 1.9.3
(function() {
  var Amostra, Base, Lote, add_amostra, add_lote, add_lote_amostra, getId, id, inicia, loteAberto, loteEmProcesso, resetStore,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  resetStore = function() {
    return localStorage.clear();
  };

  id = 0;

  getId = function(cod) {
    return id = id + 1;
  };


  /*
  id = localStorage.getItem(cod)
  if id == null
    id = 1
    localStorage.setItem(cod, id)
  localStorage.setItem(cod, parseInt(id) + 1)
  id
   */

  Base = (function() {
    function Base(ms, func) {
      this.ms = ms;
      this.func = func;
      this.exec_func();
    }

    Base.prototype.exec_func = function() {
      return setTimeout((function(_this) {
        return function() {
          return _this.p_func();
        };
      })(this), this.ms);
    };

    Base.prototype.p_func = function() {
      return this.func();
    };

    return Base;

  })();

  Amostra = (function() {
    function Amostra() {
      this.dataCriacao = Date.now();
      this.idAmostra = getId('numAmostra');
    }

    return Amostra;

  })();

  Lote = (function(superClass) {
    var amostras;

    extend(Lote, superClass);

    amostras = [];

    function Lote() {
      Lote.__super__.constructor.apply(this, arguments);
      this.numlote = getId('numlote');
      this.status = 'CRIADO';
    }

    Lote.prototype.addAmostra = function(am) {
      amostras.push(am);
      return console.log("Lote: " + this.numlote + " - Status: " + this.status + " - Amostra: " + amostras[amostras.length - 1].idAmostra);
    };

    return Lote;

  })(Base);

  add_lote = function() {
    return new Lote(5000, function() {
      return loteAberto.status = 'EMPROCESSO';
    });
  };

  add_amostra = function() {
    return new Amostra;
  };

  loteAberto = '';

  loteEmProcesso = [];

  add_lote_amostra = function() {
    if (loteAberto.status === 'EMPROCESSO') {
      loteEmProcesso.push(loteAberto);
      console.log("Lote: " + loteEmProcesso[loteEmProcesso.length - 1].numlote + " - Status: " + loteEmProcesso[loteEmProcesso.length - 1].status);
      loteAberto = add_lote();
    }
    if (loteAberto === '') {
      loteAberto = add_lote();
    }
    return loteAberto.addAmostra(add_amostra());
  };

  inicia = function() {
    return setInterval(add_lote_amostra, 1000);
  };

  inicia();


  /*
  
  $(document).ready ->
   *  $('#btnTeste').on('click', $.proxy(cal.fire, this, 'abacate'))
    $('#btnZerar').click(resetStore)
    $('#btnAdAmotra').click(inicia)
   */

}).call(this);

//# sourceMappingURL=main.js.map
