// Generated by CoffeeScript 1.9.3
(function() {
  var Amostra, EXAMES, Lote, add_amostra, add_lote, add_lote_amostra, getId, i, j, k, loteAberto, lotesEmProcesso, lotesProntos, m, n, processa_lote, resetStore, results, results1, results2, results3, results4,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  resetStore = function() {
    return localStorage.clear();
  };

  getId = function(cod) {
    var id;
    id = localStorage.getItem(cod);
    if (id === null) {
      id = 1;
      localStorage.setItem(cod, id);
    }
    localStorage.setItem(cod, parseInt(id) + 1);
    return id;
  };

  EXAMES = [
    {
      nome: 'Glicose',
      tipo: 'Numerico',
      result: (function() {
        results = [];
        for (i = 100; i <= 300; i++){ results.push(i); }
        return results;
      }).apply(this),
      ref: (function() {
        results1 = [];
        for (j = 150; j <= 250; j++){ results1.push(j); }
        return results1;
      }).apply(this)
    }, {
      nome: 'HIV',
      tipo: 'Boolean',
      result: [true, false],
      ref: false
    }, {
      nome: 'Creatinina',
      tipo: 'Numerico',
      result: (function() {
        results2 = [];
        for (k = 20; k <= 50; k++){ results2.push(k); }
        return results2;
      }).apply(this),
      ref: [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
    }, {
      nome: 'Triglicerideos',
      tipo: 'Numerico',
      result: (function() {
        results3 = [];
        for (m = 200; m <= 500; m++){ results3.push(m); }
        return results3;
      }).apply(this),
      ref: (function() {
        results4 = [];
        for (n = 300; n <= 400; n++){ results4.push(n); }
        return results4;
      }).apply(this)
    }
  ];

  Amostra = (function() {
    function Amostra() {
      this.dataHoraCriacao = Date.now();
      this.numamostra = getId('numAmostra');
      this.exame = EXAMES[Math.floor(Math.random() * 4)];
    }

    Amostra.prototype.set_result = function() {
      var ref;
      this.result = this.exame.result[Math.floor(Math.random() * (this.exame.result.length - 1))];
      this.alterado = (ref = this.result, indexOf.call(this.exame.ref, ref) < 0);
      this.dataHoraResultado = Date.now();
      return console.log("Amostra: " + this.numamostra + " - Exame: " + this.exame.nome + " - Res: " + this.result + " - Alterasdo: " + this.alterado);
    };

    return Amostra;

  })();

  Lote = (function() {
    Lote.a = 0;

    function Lote(func) {
      this.func = func;
      this.timeout_status();
      this.amostras = [];
      this.numlote = getId('numlote');
      this.status = 'CRIADO';
    }

    Lote.prototype.addAmostra = function(am) {
      return this.amostras.push(am);
    };

    Lote.prototype.timeout_status = function() {
      return setTimeout((function(_this) {
        return function() {
          return _this.set_status();
        };
      })(this), 18000);
    };

    Lote.prototype.set_status = function() {
      if (this.status === 'CRIADO') {
        this.status = 'EMPROCESSO';
        console.log("em processo - " + this.numlote);
      }
      return this.processa_amostra();
    };

    Lote.prototype.processa_amostra = function() {
      console.log(this.a + ' - ' + this.amostras.length);
      console.log(this.a <= this.amostras.length);
      if (this.a <= this.amostras.length) {
        return setTimeout(function() {
          this.amostras[this.a].set_result();
          this.processa_amostra;
          return this.a++;
        }, Math.floor(Math.random() * 7000));
      } else {
        this.status = 'PRONTO';
        console.log("pronto - " + this.numlote);
        return this.processa_lote();
      }
    };

    Lote.prototype.processa_lote = function() {
      return this.func;
    };

    return Lote;

  })();

  loteAberto = '';

  lotesEmProcesso = [];

  lotesProntos = [];

  processa_lote = function() {
    var l, len, o, results5;
    results5 = [];
    for (o = 0, len = lotesEmProcesso.length; o < len; o++) {
      l = lotesEmProcesso[o];
      console.log('lote em processo: ' + l.numlote);
      lotesProntos.push(l);
      results5.push(lotesEmProcesso.pop(l));
    }
    return results5;
  };

  add_lote = function() {
    return new Lote(processa_lote);
  };

  add_amostra = function() {
    return new Amostra;
  };

  add_lote_amostra = function() {
    if (loteAberto.status === 'EMPROCESSO') {
      lotesEmProcesso.push(loteAberto);
      loteAberto = add_lote();
    }
    if (loteAberto === '') {
      loteAberto = add_lote();
    }
    loteAberto.addAmostra(add_amostra());
    setTimeout(add_lote_amostra, Math.floor(Math.random() * 7000));
    return console.log(loteAberto.numlote);
  };

  add_lote_amostra();


  /*
  
  $(document).ready ->
   *  $('#btnTeste').on('click', $.proxy(cal.fire, this, 'abacate'))
    $('#btnZerar').click(resetStore)
    $('#btnAdAmotra').click(inicia)
   */

}).call(this);

//# sourceMappingURL=main.js.map
