// Generated by CoffeeScript 1.9.3
(function() {
  var Amostra, EXAMES, Lote, add_amostra, add_lote_aberto, add_lote_amostra, getId, inicia, j, k, l, loteAberto, lotesEmProcesso, lotesProntos, m, n, parar, processa_lote, resetStore, results, results1, results2, results3, results4,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  resetStore = function() {
    return localStorage.clear();
  };

  getId = function(cod) {
    var id;
    id = localStorage.getItem(cod);
    if (id === null) {
      id = 1;
      localStorage.setItem(cod, id);
    }
    localStorage.setItem(cod, parseInt(id) + 1);
    return id;
  };

  EXAMES = [
    {
      nome: 'Glicose',
      tipo: 'Numerico',
      result: (function() {
        results = [];
        for (j = 100; j <= 300; j++){ results.push(j); }
        return results;
      }).apply(this),
      ref: (function() {
        results1 = [];
        for (k = 150; k <= 250; k++){ results1.push(k); }
        return results1;
      }).apply(this)
    }, {
      nome: 'HIV',
      tipo: 'Boolean',
      result: [true, false],
      ref: false
    }, {
      nome: 'Creatinina',
      tipo: 'Numerico',
      result: (function() {
        results2 = [];
        for (l = 20; l <= 50; l++){ results2.push(l); }
        return results2;
      }).apply(this),
      ref: [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
    }, {
      nome: 'Triglicerideos',
      tipo: 'Numerico',
      result: (function() {
        results3 = [];
        for (m = 200; m <= 500; m++){ results3.push(m); }
        return results3;
      }).apply(this),
      ref: (function() {
        results4 = [];
        for (n = 300; n <= 400; n++){ results4.push(n); }
        return results4;
      }).apply(this)
    }
  ];

  Amostra = (function() {
    function Amostra() {
      this.dataHoraCriacao = Date.now();
      this.numamostra = getId('numAmostra');
      this.exame = EXAMES[Math.floor(Math.random() * 4)];
    }

    Amostra.prototype.set_result = function() {
      var ref;
      this.result = this.exame.result[Math.floor(Math.random() * (this.exame.result.length - 1))];
      this.alterado = (ref = this.result, indexOf.call(this.exame.ref, ref) < 0);
      return this.dataHoraResultado = Date.now();
    };

    return Amostra;

  })();

  Lote = (function() {
    function Lote(func) {
      this.func = func;
      this.timeout_status();
      this.amostras = [];
      this.numlote = getId('numlote');
      this.status = 'CRIADO';
    }

    Lote.prototype.addAmostra = function(am) {
      return this.amostras.push(am);
    };

    Lote.prototype.timeout_status = function() {
      return setTimeout((function(_this) {
        return function() {
          return _this.set_status();
        };
      })(this), 5000);
    };

    Lote.prototype.set_status = function() {
      if (this.status === 'CRIADO') {
        this.status = 'EMPROCESSO';
        console.log("set_status: " + this.status);
      }
      return this.processa_amostra(0);
    };

    Lote.prototype.processa_amostra = function(i) {
      var am;
      if (i < this.amostras.length) {
        am = this.amostras[i];
        return setTimeout((function(_this) {
          return function() {
            am.set_result();
            return _this.processa_amostra(++i);
          };
        })(this), Math.floor(Math.random() * 100));
      } else {
        this.status = 'PRONTO';
        return this.processa_lote(this);
      }
    };

    Lote.prototype.processa_lote = function(p) {
      return this.func(p);
    };

    return Lote;

  })();

  loteAberto = '';

  lotesEmProcesso = [];

  lotesProntos = [];

  parar = true;

  processa_lote = function(lote) {
    var i;
    i = lotesEmProcesso.indexOf(lote);
    return lotesEmProcesso.pop(lotesProntos.push(lotesEmProcesso[i]));
  };

  add_lote_aberto = function() {
    return loteAberto = new Lote(processa_lote);
  };

  add_amostra = function() {
    return new Amostra;
  };

  add_lote_amostra = function() {
    if (loteAberto.status === 'EMPROCESSO') {
      lotesEmProcesso.push(loteAberto);
      add_lote_aberto();
    }
    if (loteAberto === '') {
      add_lote_aberto();
    }
    loteAberto.addAmostra(add_amostra());
    if (!parar) {
      return setTimeout(add_lote_amostra, Math.floor(Math.random() * 3000));
    }
  };

  inicia = function() {
    if (parar) {
      parar = false;
      return add_lote_amostra();
    } else {
      return parar = true;
    }
  };

  $(document).ready(function() {
    $('#btnAdAmotra').click(inicia);
    return $('#btnZerar').click(resetStore);
  });

}).call(this);
